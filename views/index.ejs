<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Text-to-Image Generator</title>
  <link rel="stylesheet" href="styles.css">
</head>
<body>
  <form action="/upload" method="post" enctype="multipart/form-data">
    <h1>Text-to-Image Generator</h1>
    <label for="style">Art Style:</label>
    <select id="style" name="style">
      <option value="default">Default</option>
      <option value="impressionist">Impressionist</option>
      <option value="cubist">Cubist</option>
      <option value="anime">Anime</option>
      <option value="pixar">Pixar</option>
      <option value="adult">Adult</option>
      <option value="realism">Realism</option>
      <!-- Add more options for different styles -->
    </select>
    <br>    
    <label for="text">Enter Prompt:</label>
    <!-- Apply the CSS to the textarea -->
    <textarea id="text" name="text" required></textarea>
    <br>
    <label for="negativePrompt">Negative Prompt:</label>
    <textarea id="negativePrompt" name="negativePrompt"></textarea>
    <br>
    <!-- Add this input field to your HTML form -->
    <label for="seed">Seed:</label>
    <input type="number" id="seed" name="seed" min="-1000000" max="1000000" value="0">
    <br>
    <!-- Add the guidance scale slider -->
    <label for="guidanceScale">Guidance Scale:</label>
    <input type="range" id="guidanceScale" name="guidanceScale" min="2" max="20" value="5">
    <!-- Display guidance scale increments -->
    <label id="guidanceScaleValue">5</label>
    <br>
    <!-- Add the LoRaScale -->
    <label for="loraScale">LoRaScale:</label>
    <input type="range" id="loraScale" name="loraScale" min="0" max="65" value="5">
    <!-- Display LoRaScale value -->
    <label id="loraScaleValue">5</label>
    <br>
    <!-- Add the aspect ratio selection -->
    <label for="aspectRatio">Aspect Ratio:</label>
    <select id="aspectRatio" name="aspectRatio">
      <option value="1:1">1:1</option>
      <option value="2:3">2:3</option>
      <option value="3:4">3:4</option>
      <option value="4:3">4:3</option>
      <option value="5:7">5:7</option>
      <option value="7:5">7:5</option>
      <option value="9:16">9:16</option>
      <!-- Add more aspect ratios if needed -->
    </select>
    <br>
    <button type="button" onclick="startSpeechRecognition()">Speech to Text</button>
    <br>
    <button type="submit">Generate Image</button>
  </form>
  
  <script>
    document.addEventListener("DOMContentLoaded", function() {
      // Generate a random seed and set it as the value of the seed input field
      const seedInput = document.getElementById("seed");
      seedInput.value = Math.floor(Math.random() * (943221 - (-873098) + 1) + (-873098));

      // Get the guidance scale input element
      const guidanceScaleInput = document.getElementById('guidanceScale');
      // Get the label element to display guidance scale value
      const guidanceScaleValueLabel = document.getElementById('guidanceScaleValue');
      // Display guidance scale value when the input changes
      guidanceScaleInput.addEventListener('input', function() {
        guidanceScaleValueLabel.textContent = this.value;
      });

      // Get the LoRaScale input element
      const loraScaleInput = document.getElementById('loraScale');
      // Get the label element to display LoRaScale value
      const loraScaleValueLabel = document.getElementById('loraScaleValue');
      // Display LoRaScale value when the input changes
      loraScaleInput.addEventListener('input', function() {
        loraScaleValueLabel.textContent = this.value;
      });

      // Add focus event listeners to the textareas
      const textArea = document.getElementById('text');
      const negativePromptArea = document.getElementById('negativePrompt');
      
      textArea.addEventListener('focus', function() {
        activeTextArea = this;
      });

      negativePromptArea.addEventListener('focus', function() {
        activeTextArea = this;
      });
    });

    // Global variable to track active textarea
    let activeTextArea;

    // Function to initiate speech recognition based on active textarea
    function startSpeechRecognition() {
      if (activeTextArea) {
        const recognition = new webkitSpeechRecognition(); // Use webkitSpeechRecognition for Chrome
        recognition.lang = 'en-US'; // Set language to English
        recognition.onresult = function(event) {
          const speechToText = event.results[0][0].transcript; // Get the recognized text
          activeTextArea.value = speechToText; // Set the recognized text to the active textarea
        };
        recognition.start(); // Start speech recognition
      } else {
        alert("Click inside a textarea to activate speech-to-text for that input.");
      }
    }
  </script>
</body>
</html>
